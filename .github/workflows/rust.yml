name: integration-test

run-name: "Run test against real rabbitmq server"

# on: [push, workflow_dispatch]

on:
  push:
    branches: ["main"]
  workflow_dispatch:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  CARGO_TERM_COLOR: always

jobs:
  builds:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: cargo build (debug, all-features)
        run: cargo build --all-features --verbose

      - name: cargo clippy (all-features)
        run: cargo clippy --all-features -- -Dwarnings

      - name: cargo build (debug, tls)
        run: cargo build -F tls --verbose

  check_msrv:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        rust:
          - stable
          - 1.56
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: check
          args: --all-features

  test_all_features:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Start RabbitMQ server
        run: ./start_rabbitmq.sh

      - name: doc tests (debug, all-features)
        run: cargo test --all-features --doc --verbose

      - name: unit tests (debug, all-features)
        run: cargo test --all-features --lib --verbose

      - name: integration tests (release, all-features)
        run: cargo test --release --all-features --test '*'

      - name: examples (release, all-features)
        run: ./examples/run_examples.sh

  test_features_combination:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Start RabbitMQ server
        run: ./start_rabbitmq.sh

      - name: default
        run: cargo test

      - name: traces
        run: cargo test -F traces

      - name: compliance_assert
        run: cargo test -F compliance_assert

      - name: tls feature
        run: cargo test -F tls

      - name: urispec feature
        run: cargo test -F urispec
