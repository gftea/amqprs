name: ci
run-name: "Regression Test"

# on: [push, workflow_dispatch]

on:
  push:
    branches: ["main"]
    paths-ignore:
      - '**/README.md'
      - '**/*.png'
      - 'rabbitmq_spec/**'
      - 'prepare_release.sh'
      - 'regression_test.sh'
  workflow_dispatch:
    
  pull_request:
    branches: ["main"]
    paths-ignore:
      - '**/README.md'
      - '**/*.png'
      - 'rabbitmq_spec/**'
      - 'prepare_release.sh'
      - 'regression_test.sh'

env:
  CARGO_TERM_COLOR: always

jobs:
  builds:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: cargo build (debug, all-features)
        run: cargo build --all-features --verbose

      - name: cargo clippy (all-features)
        run: cargo clippy --all-features -- -Dwarnings

  check_msrv:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        rust:
          - stable
          - 1.56
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: check
          args: --all-features

  test_examples:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Start RabbitMQ server
        run: ./start_rabbitmq.sh

      - name: examples
        run: ./examples/run_examples.sh

  test_features_combination:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        feat:
          - -F default
          - -F traces
          - -F compliance_assert
          - -F tls
          - -F urispec
          - --all-features --release
    steps:
      - uses: actions/checkout@v3
      - name: Start RabbitMQ server
        run: ./start_rabbitmq.sh

      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: ${{ matrix.feat }}